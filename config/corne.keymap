/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};

/ {
    macros {
        screen_left: screen_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LCTRL>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LGUI &kp LCTRL>;
        };

        screen_right: screen_right {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LCTRL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LGUI &kp LCTRL>;
        };
    };
};

/ {
    behaviors {
        space_ret: space_ret {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SPACE>, <&kp RET>;

            label = "SPACE_RET";
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        apos {
            bindings = <&kp APOSTROPHE>;
            key-positions = <21 22>;
        };

        game {
            bindings = <&to 3>;
            key-positions = <36 41>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &mt ESCAPE Q        &kp W  &kp F     &kp P  &kp B             &kp J       &kp L  &kp U      &kp Y    &kp SEMI  &none
&none  &kp A               &kp R  &kp S     &kp T  &kp G             &kp M       &kp N  &kp E      &kp I    &kp O     &none
&none  &mt LEFT_CONTROL Z  &kp X  &kp C     &kp D  &kp V             &kp K       &kp H  &kp COMMA  &kp DOT  &kp FSLH  &none
                                  &kp LGUI  &mo 1  &mt LSHFT CAPS    &space_ret  &mo 2  &kp LALT
            >;
        };

        lower_layer {
            bindings = <
&none  &none       &none         &kp UP        &none      &none     &none     &mt F7 N7  &mt F8 N8  &mt F9 N9  &none    &none
&none  &kp LSHIFT  &kp LEFT      &kp DOWN      &kp RIGHT  &none     &none     &mt F4 N4  &mt F5 N5  &mt F6 N6  &kp END  &none
&none  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &none      &none     &kp N0    &mt F1 N1  &mt F2 N2  &mt F3 N3  &kp DOT  &none
                                 &kp LGUI      &trans     &trans    &kp BSPC  &trans     &kp HOME
            >;
        };

        raise_layer {
            bindings = <
&none  &kp EXCL        &kp AT     &none         &kp PRCNT      &none        &kp CARET  &kp LBKT  &kp RBKT  &kp PLUS   &kp STAR       &none
&none  &kp AMPS        &kp TILDE  &screen_left  &screen_right  &kp GRAVE    &kp EQUAL  &kp LPAR  &kp RPAR  &kp MINUS  &kp PIPE       &none
&none  &kp LEFT_SHIFT  &none      &kp CARET     &kp DLLR       &none        &kp HASH   &kp LBRC  &kp RBRC  &kp UNDER  &kp BACKSLASH  &none
                                  &kp LGUI      &trans         &kp DEL      &trans     &trans    &kp RALT
            >;
        };

        game_layer {
            bindings = <
&kp F3       &kp ESC    &kp Q    &kp W   &kp R   &kp E        &kp J   &kp L  &kp U      &kp Y    &kp SEMI  &kp BSPC
&mt TAB DOT  &kp LSHFT  &kp A    &kp S   &kp D   &kp F        &kp M   &kp N  &kp E      &kp I    &kp O     &kp SQT
&kp LALT     &kp LCTRL  &mt B G  &kp P   &kp M   &kp N        &kp K   &kp H  &kp COMMA  &kp DOT  &kp FSLH  &to 0
                                 &kp N2  &kp N1  &kp SPACE    &trans  &to 0  &kp RALT
            >;
        };

        mouse_layer {
            bindings = <
&none  &none           &kp LG(LBKT)    &mmv MOVE_UP    &kp LG(RBKT)     &none     &none   &msc SCROLL_UP    &none      &none      &none     &none
&none  &kp LEFT_SHIFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none     &none   &mkp LCLK         &mkp RCLK  &mkp MCLK  &none     &none
&none  &none           &none           &none           &none            &none     &none   &msc SCROLL_DOWN  &none      &none      &kp LGUI  &none
                                       &trans          &none            &trans    &trans  &none
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
